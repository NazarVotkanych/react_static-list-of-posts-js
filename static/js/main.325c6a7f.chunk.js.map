{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","isCommentExist","length","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCpBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQS,UCJnBC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,SCCGW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,IAAmBD,EAAKN,SAASQ,OAEvC,OACE,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,EAAKG,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUL,KAAME,EAAKF,aAIzB,mBAAGP,UAAU,iBAAb,SACGS,EAAKV,OAGR,uBAECW,EACC,cAAC,EAAD,CAAaP,SAAUM,EAAKN,WAE1B,mBAAG,UAAQ,oBAAX,kCC3BGU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMV,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,UCcnB,IAAMS,EAAQC,EAAgBX,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAduBS,EAcDP,EAAKO,OAbpBC,EAAgBC,MAAK,SAAAX,GAAI,OAC9BA,EAAKF,KAAOW,MACR,MAYNb,UAT0BgB,EASGV,EAAKJ,GAR3Be,EAAmBC,QAAO,SAAAzB,GAAO,OACtCA,EAAQuB,SAAWA,QAFvB,IAA4BA,EANHH,KAkBZM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCzBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.325c6a7f.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo key={comment.id} comment={comment} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const isCommentExist = !!post.comments.length;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={post.user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {post.body}\n      </p>\n\n      <hr />\n\n      {isCommentExist ? (\n        <CommentList comments={post.comments} />)\n        : (\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction findUserByPosts(userId) {\n  return usersFromServer.find(user => (\n    user.id === userId\n  )) || null;\n}\n\nfunction getCommentsByPosts(postId) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === postId\n  ));\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: findUserByPosts(post.userId),\n  comments: getCommentsByPosts(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}